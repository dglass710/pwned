#! /bin/bash

# Source the configuration and shared functions files
source "$(dirname "$0")/user_settings.sh"
source "$(dirname "$0")/shared_functions.sh"

set -e  # Exit immediately if a command exits with a non-zero status.

# Define the script name for logging
SCRIPT_NAME="UpdateTest"

# Ensure paths are absolute
DB_FILE="$PROJECT_DIR/pwned.db"

# Log the start of the test
log_step_start "Test."

# Change to the Project Directory
cd $PROJECT_DIR

# Step 1: Remove the database file to ensure the next `Update` script creates a new one
# This ensures that the next run of the Update script starts with a clean state.
if [ -f "$DB_FILE" ]; then
    rm "$DB_FILE"
fi

# Step 2: Run `Update` without the database file
# Since the database file does not exist, the Update script will create a new one without prompting the user.
"$PROJECT_DIR/Update" 1 of 6

# Step 3: Remove the database file again to test the next script in a fresh state
# This ensures that the next run of the partial update script starts with a clean state.
if [ -f "$DB_FILE" ]; then
    rm "$DB_FILE"
fi

# Step 4: Run `Update` with partial update again to ensure it correctly handles the absence of the database file
# This tests the partial update script's behavior when there is no existing database.
"$PROJECT_DIR/Update" Partial No Database 2 of 6

# Step 5: Simulate user input to skip downloading the latest passwords and rebuilding the database
# This tests the Update script's behavior when the user chooses not to update the database.
echo n | "$PROJECT_DIR/Update" 3 of 6

# Step 6: Always perform a full update
# This ensures that the full update script performs a complete update, regardless of the existing state.
"$PROJECT_DIR/Update" Full With Database 4 of 6

# Step 7: Simulate user input to download the latest passwords and rebuild the database
# This tests the Update script's behavior when the user chooses to update the database.
echo y | "$PROJECT_DIR/Update" 5 of 6

# Step 8: Run `Update` with partial update - it should find the database from step 2
# This ensures that the partial update correctly handles the presence of an existing database.
"$PROJECT_DIR/Update" Partial With Database 6 of 6 

# Log the end of the test
log_step_end "Test."
